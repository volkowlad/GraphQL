type Post {
    id: UUID!
    title: String!
    content: String!
    allowComments: Boolean!
    createdAt: Time!
    comments(limit: Int!, offset: Int!): [Comment!]!
}

type Comment {
    id: UUID!
    postId: UUID!
    parentId: UUID
    content: String!
    createdAt: Time!
    replies(limit: Int!, offset: Int!): [Comment!]!
}

type Query {
    posts: [Post!]!
    post(uuid: UUID!, limit: Int!, offset: Int!): Post
    comment(postId: UUID!, parentId: UUID, limit: Int!, offset: Int!): [Comment]
}

type Mutation {
    createPost(title: String!, content: String!, allowComments: Boolean!): Post!
    addComment(postId: UUID!, parentId: UUID, content: String!): Comment!
    allowComments(postID: UUID!, allowComments: Boolean!): Boolean!
}

type Subscription {
    newComment(postId: UUID!): Comment!
}

scalar Time
scalar UUID
